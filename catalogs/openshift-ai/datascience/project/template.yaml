apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: data-science-project
  title: Red Hat OpenShift AI - Data Science Project
  description: |
    This template automates the setup of a Red Hat OpenShift AI Data Science Project. It provides 
    a unified project for integrating rhoai resources. The template helps teams easily 
    configure datascience projects, ensuring that all resources are consistently are merged 
    together under a unified project.
  tags:
    - openshift-ai
    - data-science-project
    - automation
    - data-science
    - data-pipelines
    - argocd

spec:
  owner: data-science
  system: self-service
  type: DataScience-Project
  parameters:

    - title: ArgoCD Selection
      ui:group: argocd
      required:
        - argoInstance
      properties:
        argoInstance:
          title: ArgoCD Instance
          description: The ArgoCD instance that will manage this application. Choose from available instances.
          enum:
            - main
          type: string

    - title: DataScience Project Settings
      ui:group: data-project
      required:
        - projectName
      properties:
        projectName:
          title: Project Name
          description: The project where the data connector is integrated.
          type: string
          pattern: "^[a-z][a-z0-9-]+$"
          minLength: 3
          maxLength: 30

  steps:

    #######################
    ## Request Dynamic Data
    #######################
    - id: requestDynamicData
      name: Fetch Dynamic Data
      action: http:backstage:request
      input:
        method: 'POST'
        path: 'proxy/data/fetch'
        headers:
          Content-Type: 'application/json'
        body: |
          {
            "request": ["DOMAIN"]
          }

    ###########################
    ## Template the Application
    ###########################
    - id: applicationTemplate
      name: Template Helm Application
      action: fetch:template
      input:
        url: "../../../../skeletons/applications/helm/"
        targetPath: "projects/${{ parameters.projectName }}/"
        values:
          repoName: "${{ parameters.projectName }}-ds-project"
          namespace: "openshift-gitops"
          syncWave: "-1"
          chart:
            name: "data-science-project"
            chartUrl: "https://poc-examples.github.io/supporting-charts"
            chartVersion: "0.1.3"
          projectName: "self-service"
          automated:
            prune: true
            selfHeal: true
          createNamespace: "false"
          valuesObject: |
            project: ${{ parameters.projectName }}

    ##############
    ## Rename File
    ##############
    - id: changeTemplateName
      name: Change Template Name
      action: fs:rename
      input:
        files:
          - from: "projects/${{ parameters.projectName }}/application.yaml"
            to: "projects/${{ parameters.projectName }}/${{ parameters.projectName }}-ds-project.yaml"

    ##########################
    ## Push Repository Changes
    ##########################
    - id: publishManifests
      name: Publishing to the Source Code Repository
      action: gitlab:repo:push
      input:
        allowedHosts:
          - 'gitlab.com'
        description: |
          placeholder
        repoUrl: gitlab.com?owner=self-provisioned&repo=manifests
        sourcePath: "./projects/${{ parameters.projectName }}"
        targetPath: "./projects/${{ parameters.projectName }}"
        branchName: main
        commitAction: create
        commitMessage: "Created ${{ parameters.projectName }} Data Science Project"

  output:
    links:
      - title: GitOps Application
        url: https://openshift-gitops-server-openshift-gitops.apps.${{ steps['requestDynamicData'].output.body["DOMAIN"] }}/applications/openshift-gitops/root-self-service
      - title: GitLab Repository
        url: https://gitlab.apps.${{ steps['requestDynamicData'].output.body["DOMAIN"] }}/self-provisioned/manifests.git
