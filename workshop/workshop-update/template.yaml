apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: workshop-update
  title: Workshop - Update Version
  description: |
    This template updates the Helm chart version for the Workshop rollout controller
  tags:
    - gitlab
    - automation
    - devops
    - poc-examples
    - self-service

spec:
  owner: cluster-admins
  system: self-service
  type: workshop
  parameters:
    - title: Workshop Configuration
      required:
        - rolloutControllerVersion
      properties:
        rolloutControllerVersion:
          title: Rollout controller Helm chart version
          type: string
          default: 0.6.109
          description: See https://github.com/poc-examples/charts/blob/main/charts/rollout-controller/Chart.yaml for latest version i.e. 0.6.109
        general:
          type: object
          title: General Settings
          properties:
            gitlabOwner:
              title: GitLab Owner
              type: string
              default: self-provisioned
              description: GitLab group or username that owns the repository
              ui:widget: hidden
            gitlabRepository:
              title: GitLab Repository Name
              type: string
              default: workshop-repository
              description: Repository name used to initialize workshop

        devspaces:
          type: object
          title: DevSpaces Dedicated Capacity
          properties:
            enableDevspaces:
              title: Enable Dedicated Capacity?
              type: boolean
              default: false
              description: Toggle to provision dedicated capacity for devspaces.
          dependencies:
            enableDevspaces:
              oneOf:
                - properties:
                    enableDevspaces:
                      const: false
                - properties:
                    enableDevspaces:
                      const: true
                    devspacesMachineCount:
                      title: Machine Count
                      type: integer
                      minimum: 1
                      default: 1
                      description: Number of nodes dedicated to DevSpaces
                    devspacesMachineType:
                      title: Machine SKU
                      type: string
                      default: Standard_D8s_v3
                      description: Virtual Machine SKU used to provision DevSpaces nodes

        kafka:
          type: object
          title: Kafka Dedicated Capacity
          properties:
            enableKafka:
              title: Enable Dedicated Capacity?
              type: boolean
              default: false
              description: Toggle to provision dedicated capacity for kafka.
          dependencies:
            enableKafka:
              oneOf:
                - properties:
                    enableKafka:
                      const: false
                - properties:
                    enableKafka:
                      const: true
                    kafkaMachineCount:
                      title: Machine Count
                      type: integer
                      minimum: 1
                      default: 1
                      description: Number of nodes dedicated to Kafka
                    kafkaMachineType:
                      title: Machine SKU
                      type: string
                      default: Standard_D8s_v3
                      description: Virtual Machine SKU used to provision Kafka nodes

  steps:

    ###################################
    ## Fetch Available ArgoCD Instances
    ###################################
    - action: catalog:fetch
      id: fetchArgoCDInstances
      name: Fetch ArgoCD Instances
      input:
        entityRef: resource:default/argocd-instances

    ##########################
    ## Template the Overlays
    #########################
    - id: generateOverlays
      name: Generate Overlays
      each: ${{ steps['fetchArgoCDInstances'].output.entity.spec.instances }}
      action: fetch:template
      input:
        url: "./skeleton/overlays/${{ each.value.name }}"
        targetPath: "./_init_/workshop/overlays/${{ each.value.name }}"
        values:
          gitlabRemoteUrl: ${{ steps['publishEmptyRepo'].output.remoteUrl }}
          gitlabBranch: main
          cluster:
            domains:
              local: "apps.${{ each.value.domain }}"
              shared: ${{ steps['fetchArgoCDInstances'].output.entity.spec.services.domain }}
            type: "${{ each.value.type }}"
          rolloutControllerVersion: ${{ parameters.rolloutControllerVersion }}
          gitlabOwner: ${{ parameters.general.gitlabOwner }}
          devspaces:
            sku: ${{ parameters.devspaces.devspacesMachineType }}
            enableCapacity: ${{ parameters.devspaces.enableDevspaces }}
            count: ${{ parameters.devspaces.devspacesMachineCount }}
          amq:
            sku: ${{ parameters.kafka.kafkaMachineType }}
            enableCapacity: ${{ parameters.kafka.enableKafka }}
            count: ${{ parameters.kafka.kafkaMachineCount }}
          gitlabRepository: ${{ parameters.general.gitlabRepository }}

    #################################
    ## Create Self-Service Repository
    #################################
    - id: publish
      name: "Create Self-Service Repository"
      action: gitlab:repo:push
      input:
        description: |
          Self-Service Repository
        repoUrl: gitlab.com?owner=${{ parameters.general.gitlabOwner }}&repo=${{ parameters.general.gitlabRepository }}
        branchName: main
        commitAction: update  # replaces the existing files
        commitMessage: "Update overlays with new Helm chart version"

  output:
    links:
      - title: GitLab Repository
        url: ${{ steps['publishEmptyRepo'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: component:default/root-self-service-repository
